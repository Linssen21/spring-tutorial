package com.example.demo.student;

import com.example.demo.util.BaseEntity;
import lombok.*;

import javax.persistence.*;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotNull;

/**
 * Use lombok annotations to create constructors, getter, setter
 * to avoid having a lot of boilerplate codes generated by IntelliJ
 *
 * Student Model
 * GenerationType.SEQUENCE - is not supported by MySQL by default uses GenerationType.TABLE which is very slow
 *
 * Lombok @Data Annotation will make the Clas immutable
 */
@ToString
@Getter
@Setter
@EqualsAndHashCode
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table
public class Student extends BaseEntity{
    @Id
    @SequenceGenerator(name = "student_sequence", sequenceName = "student_sequence", allocationSize = 1)
    @GeneratedValue(generator = "student_sequence",
            strategy = GenerationType.SEQUENCE)
    private Long id;
    @NotNull
    private String name;
    @Email
    private String email;
    @NotNull
    @Enumerated(EnumType.STRING)
    private Gender gender;

//    public Student(String name, String email, Gender gender) {
//        this.name = name;
//        this.email = email;
//        this.gender = gender;
//    }

    // Use Constructor, getter and setter to Student Model without lombok

    // public Student(Long id, String name, String email, Gender gender) {
    // this.id = id;
    // this.name = name;
    // this.email = email;
    // this.gender = gender;
    // }
    //
    // public void setId(Long id) {
    // this.id = id;
    // }
    //
    // public void setName(String name) {
    // this.name = name;
    // }
    //
    // public void setEmail(String email) {
    // this.email = email;
    // }
    //
    // public void setGender(Gender gender) {
    // this.gender = gender;
    // }
    //
    // public Long getId() {
    // return id;
    // }
    //
    // public String getName() {
    // return name;
    // }
    //
    // public String getEmail() {
    // return email;
    // }
    //
    // public Gender getGender() {
    // return gender;
    // }
}
